﻿@using MudBlazor
@inject NavigationManager NavigationManager

<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
    <MudNavLink Href="strategic-plan" Icon="@Icons.Material.Filled.CheckCircle">Strategic Plan</MudNavLink>
    <MudNavLink Href="idealist" Icon="@Icons.Material.Filled.QuestionAnswer">NAU Ideas</MudNavLink>
    <MudNavLink Href="newrequest" Icon="@Icons.Material.Filled.AddComment">Submit a New Request</MudNavLink>
    <MudNavLink Href="reporting" Icon="@Icons.Material.Filled.Ballot">Reporting</MudNavLink>
    <MudNavLink OnClick="SignOut" Icon="@Icons.Material.Filled.Badge">Sign Out</MudNavLink>
</MudNavMenu>

@code {
    private bool authenticated = false;
    private bool admin = true;

    User? authenticatedUser;

    private async Task OnInitializedAsync()
    {
        var result = await ProtectedSessionStore.GetAsync<User>("AuthenticatedUser");
        authenticatedUser = result.Success ? result.Value : null;
    }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task SignOut()
    {
        await ProtectedSessionStore.DeleteAsync("AuthenticatedUser");
        authenticatedUser = null;
        NavigationManager.NavigateTo("/", true);
    }

}